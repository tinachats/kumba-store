// Date and time functions
let today = new Date();
let hours = ("0" + today.getHours()).slice(-2);
let date = ("0" + today.getDate()).slice(-2);
let mnth = ("0" + today.getMonth()).slice(-2);
let year = today.getFullYear();
let day = new Array();
day[0] = 'Sunday';
day[1] = 'Monday';
day[2] = 'Tuesday';
day[3] = 'Wednesday';
day[4] = 'Thursday';
day[5] = 'Friday';
day[6] = 'Saturday';

let d = day[today.getDay()];

let month = new Array();
month[0] = 'January';
month[1] = 'February';
month[2] = 'March';
month[3] = 'April';
month[4] = 'May';
month[5] = 'June';
month[6] = 'July';
month[7] = 'August';
month[8] = 'September';
month[9] = 'October';
month[10] = 'November';
month[11] = 'December';

// User greeting
(function greeting() {
    let greeting, icon;
    if (hours < 12) {
        greeting = 'Good morning!';
        icon = 'sunrise';
    } else if (hours < 18) {
        greeting = 'Good afternoon!';
        icon = "noon";
    } else {
        greeting = 'Good evening!'
        icon = 'cloudy-night';
    }
    let greeting_tags = document.querySelectorAll('.user-greeting');
    for (let i = 0; i < greeting_tags.length; i++) {
        greeting_tags[i].innerHTML = greeting;
    }
    document.querySelector('.greeting-icon').src = `dist/images/greeting-icons/${icon}.svg`;
})();

$(function() {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.querySelectorAll('.needs-validation')

    // Loop over them and prevent submission
    Array.prototype.slice.call(forms)
        .forEach(function(form) {
            form.addEventListener('submit', function(event) {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }

                form.classList.add('was-validated')
            }, false)
        });

    /*** Lazy load images ***/
    let lazyLoadImages;
    if ('IntersectionObserver' in window) {
        lazyLoadImages = document.querySelectorAll('.lazy');
        let imageObserver = new IntersectionObserver(function(entries, observer) {
            entries.forEach(function(entry) {
                if (entry.isIntersecting) {
                    let image = entry.target;
                    image.src = image.dataset.src;
                    image.classList.remove('lazy');
                    imageObserver.unobserve(image);
                }
            });
        });
        lazyLoadImages.forEach(function(image) {
            imageObserver.observe(image);
        });
    } else {
        let lazyLoadThrottleTimeout;
        lazyLoadImages = document.querySelectorAll('.lazy');

        function lazyLoading() {
            if (lazyLoadThrottleTimeout) {
                clearTimeout(lazyLoadThrottleTimeout);
            }
            lazyLoadThrottleTimeout = setTimeout(() => {
                let scrollTop = window.pageYOffset;
                lazyLoadImages.forEach(function(img) {
                    if (img.offsetTop < window.innerHeight + scrollTop) {
                        img.src = img.dataset.src;
                        img.classList.remove('lazy');
                    }
                });
                if (lazyLoadImages.length == 0) {
                    document.removeEventListener('scroll', lazyLoading);
                    window.removeEventListener('resize', lazyLoading);
                    window.removeEventListener('orientationChange', lazyLoading);
                }
            }, 20);
        }
        document.addEventListener('scroll', lazyLoading);
        window.addEventListener('resize', lazyLoading);
        window.addEventListener('orientationChange', lazyLoading);
    }
    /*** /.Lazy load images ***/

    // Toggle the active class on nav-items on mouse-enter
    $('.nav-item').on('mouseenter', function() {
        $(this).addClass('active');
        $('.nav-item').not(this).removeClass('active');
    });

    // Toggle the active class on click
    $('.nav-item, .product-color').on('click', function() {
        $(this).addClass('active');
        $('.nav-item, .product-color').not(this).removeClass('active');
    });
});